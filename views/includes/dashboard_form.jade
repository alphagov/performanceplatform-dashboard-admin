form(method='post', action=action)
  .row
    .col-md-8
      .form-group
        label(for='dashboard_start_page_url') GOV.UK start page web address
        input.form-control(name='dashboard_start_page_url', id='dashboard_start_page_url', value=dashboard.relatedPages && dashboard.relatedPages.transaction && dashboard.relatedPages.transaction.url)
        p.help-block We’ll use the information from the GOV.UK start page to prefill several of the boxes below

      .form-group
        label(for='dashboard_title') Dashboard title
        input.form-control.input-lg(name='dashboard_title', id='dashboard_title', value=dashboard.title)
        p.help-block Write in the passive voice, eg ‘Passport applications’, ‘Tax disc renewals’

      .form-group
        label(for='dashboard_slug') Dashboard slug
        input(name='dashboard_slug', id='dashboard_slug', class='form-control', disabled=((dashboard.slug && !isNew) ? 'true' : undefined), value=dashboard.slug, pattern='[-a-z]+', required)
        if dashboard.slug && !isNew
          input(type='hidden', name='dashboard_slug', value=dashboard.slug)

    .col-md-4#links
      .form-group
        label(for='dashboard_start_page_title') Link to service
        input.form-control(name='dashboard_start_page_title', id='dashboard_start_page_title', value=dashboard.relatedPages && dashboard.relatedPages.transaction && dashboard.relatedPages.transaction.title)
        p.help-block Link text taken from GOV.UK start page
      if dashboard.relatedPages
        fieldset#related-links
          if dashboard.relatedPages.other
            each link, index in dashboard.relatedPages.other
              +link-group('dashboard_link', link.url, link.title, true)
        a#related-links-add
          span.glyphicon.glyphicon-plus-sign
          span Add more related links

  .row
    h2.sep Modules
    .col-md-8
      ul.modules
        each module in modules
          li(class=module.built ? '' : 'disabled')
            if module.built
              a(href='#module_' + module.id)= module.title
              fieldset.twiddle
                input(type='radio', id='module_' + module.id + '_enabled_on', name='module_' + module.id + '_enabled', value='true', checked=module.enabled ? 'checked' : undefined)
                label(for='module_' + module.id + '_enabled_on') On
                input(type='radio', id='module_' + module.id + '_enabled_off', name='module_' + module.id + '_enabled', value='false', checked=module.enabled ? undefined : 'checked')
                label(for='module_' + module.id + '_enabled_off') Off
            else
              span.title= module.title
            div.module(id='module_' + module.id)
              != renderTemplate(module.id, {})
            span.icon

  .row
    h2.sep Footer
    .col-md-8

      .form-group
        label(for='dashboard_description') Description
        textarea(name='dashboard_description', id='dashboard_description', class='form-control',)
          = dashboard.description
        p.help-block Keep it chopped out, yeah?

      .form-group
        label(for='dashboard_department') Department
        select.form-control(name='dashboard_department', id='dashboard_deptartment')
          if !dashboard.department
            option(selected='selected', value='')
          each department in departments
            option(selected=((department.id === dashboard.department) ? 'selected' : undefined), value=department.id)
              = department.title

      .form-group
        label(for='dashboard_agency') Agency/organisation
          span.light optional
        select.form-control(name='dashboard_agency', id='dashboard_agency')
          if !dashboard.agency
            option(selected='selected', value='')
          each agency in agencies
            option(selected=((agency.id === dashboard.agency) ? 'selected' : undefined), value=agency.id)
              = agency.title

      .form-group
        fieldset.twiddle
          legend User
          each customer_type in customer_types
            input(type='radio', id='ct_' + customer_type.id, name='dashboard_customer_type', checked=((customer_type.id === dashboard['customer-type']) ? 'checked' : undefined), value=customer_type.id)
            label(for='ct_' + customer_type.id)
              = customer_type.title

      .form-group
        fieldset.twiddle
          legend Service costs paid by
          each business_model in business_models
            input(type='radio', id='bm_' + business_model.id, name='dashboard_business_model', checked=((business_model.id === dashboard['business-model']) ? 'checked' : undefined), value=business_model.id)
            label(for='bm_' + business_model.id)
              = business_model.title

      .form-group
        label(for='dashboard_description_extra') Notes
        textarea.form-control(name='dashboard_description_extra', id='dashboard_description_extra')
          = dashboard['description-extra']

  .well#save-changes
    h2 Save your changes

    .row
      .form-group
        .col-xs-4
          label(for='commit_message') Edit summary
          input(name='commit_message', id='commit_message', class='form-control', required)
          p.help-block A short summary of what you've changed

    button(type='submit', class='btn btn-success') Save changes

  .clearfix

#hidden-start-page-template.hidden
  +link-group('dashboard_start_page', '', '', true)

#hidden-link-template.hidden
  +link-group('dashboard_link', '', '', true)

//- Link mixins
mixin link-group(identifier, url_value, title_value, show_remove_link)
  .link
    if show_remove_link
      a.remove-link.btn.btn-sm.btn-danger &times;
    +link-row('Title', identifier + '_title', title_value)
    +link-row('URL', identifier + '_url', url_value)

mixin link-row(type, form_element_identifier, value)
  .form-group.row
    .col-sm-2
      label.control-label.input-sm(for=form_element_identifier)= type
    .col-sm-10
      input.form-control.input-sm(name=form_element_identifier, id=form_element_identifier, value=value)
